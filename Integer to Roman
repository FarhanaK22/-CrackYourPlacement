class Solution {
public:
    string intToRoman(int num) {
        int r ; char s;
        string ans="";
        map<int ,string> mp ={
        {1, "I"}, {2, "II"}, {3, "III"}, {4, "IV"}, {5, "V"}, {6, "VI"}, {7, "VII"},{8,"VIII"} ,{9, "IX"}, {10, "X"},
        {20, "XX"}, {30, "XXX"}, {40, "XL"}, {50, "L"}, {60, "LX"}, {70, "LXX"}, {80, "LXXX"}, {90, "XC"},
        {100, "C"}, {200, "CC"}, {300, "CCC"}, {400, "CD"}, {500, "D"}, {600, "DC"}, {700, "DCC"}, {800, "DCCC"},
        {900, "CM"}, {1000, "M"}
    };
        if(num >= 1000)
       { 
         r= num / 1000;
         num = num - r* 1000;
         while(r>0)
         {
            ans += mp[1000];
            r--;
         }
         
       }

       if(num >= 100 && num < 1000)
       {
         r= num /100;
         num = num - r* 100;
         ans += mp[r*100];
       }
       if(num >= 10 && num<100)
       {
         r= num /10;
         num = num - r* 10;
         ans += mp[r*10];
       }
      cout<<num;
         ans += mp[num];
       
    return ans;
    }
};
