/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
    //     int count =1;
    //     ListNode* temp = head;

    //     while(temp->next)
    //     {
    //         count++;
    //         temp = temp->next;
    //     }

    //     temp = head;
    //     count /= 2;
        
    //     while(count)
    //     {temp = temp->next;
    //     count--;
    //     }
    //     return temp;
    // }

    //solution 2
    ListNode * slow = head;
    ListNode * fast = head;

    while(fast && fast->next)
    {
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow;}

};
