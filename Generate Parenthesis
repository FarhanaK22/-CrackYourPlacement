class Solution {
public:
    void valid( vector<string> &ans, int open, int close, string bracket)
    {
        if(!open && !close)
        {
            ans.push_back(bracket);
            return;
        }

        if(open >0)
        {
            bracket.push_back('(');
            valid(ans,open-1,close,bracket);
            bracket.pop_back();
        }
        if(close > open)
        {
            bracket.push_back(')');
            valid(ans,open,close-1,bracket);
            bracket.pop_back();
        }
        
    }
    vector<string> generateParenthesis(int n) {
        int open = n;
        int close = n;
        string bracket;
        vector<string> ans;
        valid(ans,open,close,bracket);
        return ans;
    }
};
