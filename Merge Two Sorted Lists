/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void merge(ListNode* &a, ListNode* & b)
    {  ListNode * curr = a;
        ListNode * next = curr->next;
        while(b && curr->next)
        {  next = curr->next;
           if(b->val < next->val)
           {   
                curr->next = b;
                b= b->next;
                curr = curr->next;
                curr->next = next;
           }
           else
           {
            curr = curr->next;
           }
        }
        if(b)
        curr->next = b;
    }
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(!list1)
        return list2;
        if(!list2)
        return list1;
        ListNode* dum = new ListNode(-1);
        if(list1->val <= list2->val)
       { merge(list1,list2);
         dum ->next = list1;}
        else
        {
        merge(list2,list1);
        dum ->next = list2;}
        return dum->next;
    }   
};
