//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
        vector <int> search(string pattern, string text)
        {
            vector<int> res;
            
            int q = 101; // A prime number
            int d = 26;  // Number of characters in the input alphabet
            
            int m = pattern.size();
            int n = text.size();
            
            int i, j;
            
            int p = 0; // Hash value for pattern
            int t = 0; // Hash value for text
            int h = 1;
            
            // The value of h would be "pow(d, m-1)%q"
            for (int i = 0; i < m - 1; i++)
                h = (h * d) % q;
            
            // Calculate the hash value of pattern and first window of text
            for (int i = 0; i < m; i++) {
                p = (d * p + pattern[i]) % q;
                t = (d * t + text[i]) % q;
            }
            
            // Slide the pattern over text one by one
            for (int i = 0; i <= n - m; i++) {
                // Check the hash values of current window of text and pattern
                if (p == t) {
                    // Check for characters one by one
                    for (j = 0; j < m; j++) {
                        if (text[i + j] != pattern[j])
                            break;
                    }
                    
                    // If p == t and pattern[0...m-1] = text[i, i+1, ...i+m-1]
                    if (j == m)
                        res.push_back(i + 1); // 1-based index
                }
                
                // Calculate hash value for next window of text: Remove leading digit, add trailing digit
                if (i < n - m) {
                    t = (d * (t - text[i] * h) + text[i + m]) % q;
                    
                    // We might get negative value of t, converting it to positive
                    if (t < 0)
                        t = (t + q);
                }
            }
            return res;
        
        }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string S, pat;
        cin >> S >> pat;
        Solution ob;
        vector <int> res = ob.search(pat, S);
        for (int i : res) cout << i << " ";
        cout << endl;
    }
    return 0;
}

// Contributed By: Pranay Bansal

// } Driver Code Ends
